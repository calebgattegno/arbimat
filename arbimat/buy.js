const tokenContractAddress="0x5dd6044e582219b47071f30e55cca5804a9d6bf7",tokenContractAbi=["function approve(address _spender, uint256 _value) public returns (bool success)","function allowance(address owner, address spender) public view returns (uint256)","function balanceOf(address account) public view returns (uint256)","event Approval(address indexed owner, address indexed spender, uint256 value)"],contractMarketAddress="0xfca54ff213486b746fe734fe1eb45b8a84d46b63",contractMarketAbi=["function swapEthForTokensWithReferral(uint256 _minAmountOut, address _to, address _referrer) public payable","function getCurrentPriceRatio() public view returns (uint112 amount0, uint112 amount1)","function minimalHoldingForReferralBonus() public view returns(uint256)"];let provider,signer,contractToken,contractMarket,connectedWalletAddress="",referralWalletAddress="",referralValid=!1;function web3(){return void 0===provider&&(provider=new ethers.providers.Web3Provider(window.ethereum,"any"),signer=provider.getSigner(),contractToken=new ethers.Contract(tokenContractAddress,tokenContractAbi,signer),contractMarket=new ethers.Contract(contractMarketAddress,contractMarketAbi,signer)),{provider:provider,signer:signer,contractToken:contractToken,contractMarket:contractMarket}}function fillSlippage(e){document.getElementById("purchaseSlippage").value=e}async function onBtnConnect(){const{provider:e,contractToken:t}=web3();e.provider.on("accountsChanged",(e=>onWalletConnected())),e.provider.on("chainChanged",(e=>onWalletConnected())),e.provider.on("networkChanged",(e=>onWalletConnected())),await onWalletConnected()}async function onWalletConnected(){const{provider:e,contractToken:t,contract:n}=web3(),r=await e.send("eth_requestAccounts",[]);connectedWalletAddress=r[0],document.getElementById("connectedWallet").value=connectedWalletAddress,document.getElementById("btnPurchase").classList.remove("disabled"),document.getElementById("reflink").href="./buy.html?ref="+connectedWalletAddress,await updateControls()}function round(e,t){return Math.floor(e*10**t)/10**t}async function getCurrentPrice(){const e=await contractMarket.getCurrentPriceRatio(),t=Number(ethers.utils.formatUnits(e.amount0.toString(),18));return Number(ethers.utils.formatUnits(e.amount1.toString(),18))/t}async function updateControls(){const{provider:e,signer:t,contractToken:n,contractPresale:r}=web3(),o=await getCurrentPrice();if(document.getElementById("currentPrice").value=round(o,8)+" AMAT/ETH",!connectedWalletAddress)return;const a=await e.getBalance(connectedWalletAddress),c=Number(ethers.utils.formatUnits(a.toString(),18));document.getElementById("labelAmountETH").innerText="(balance "+round(c,4)+" ETH)";const l=await n.balanceOf(connectedWalletAddress),s=Number(ethers.utils.formatUnits(l.toString(),18));document.getElementById("currentBalance").value=round(s,2)+" AMAT"}async function fillReferrerStatus(e){const{contractMarket:t,contractToken:n}=web3();document.getElementById("referralCode").value=referralWalletAddress;try{const e=await n.balanceOf(referralWalletAddress),r=await t.minimalHoldingForReferralBonus(),o=Number(ethers.utils.formatUnits(e.toString(),18)),a=Number(ethers.utils.formatUnits(r.toString(),18));console.log(o,a),o<a?(document.getElementById("referralStatus").value="Referral doesn't hold minimum balance "+a+" AMAT",document.getElementById("warningRefNotValid").removeAttribute("hidden"),referralValid=!1):(document.getElementById("referralStatus").value="Referral code is ok",document.getElementById("warningRefNotValid").setAttribute("hidden",""),referralValid=!0)}catch(e){console.log(e),document.getElementById("referralStatus").value="Invalid referral code",referralValid=!1}}async function onBtnPurchase(){const{provider:e,signer:t,contractToken:n,contractMarket:r}=web3();let o=document.getElementById("purchaseAmountEth").value;o=round(o,6);const a=document.getElementById("purchaseSlippage").value,c=await getCurrentPrice(),l=o*(1/c)*((100-a)/100);console.log("Price",c,"eths:",o,"minBuy:",l);const s=ethers.utils.parseUnits(l.toString(),18),d=ethers.utils.parseUnits(o.toString(),18);console.log(s,d);const i=await r.swapEthForTokensWithReferral(s,connectedWalletAddress,referralValid?referralWalletAddress:"0x0000000000000000000000000000000000000000",{value:d});console.log("tx",i)}$((function(){const e=window.location.search,t=new URLSearchParams(e);referralWalletAddress=t.get("ref"),fillReferrerStatus(referralWalletAddress),document.getElementById("btnConnect").onclick=onBtnConnect,document.getElementById("btnPurchase").onclick=onBtnPurchase,updateControls(),setInterval((()=>updateControls()),5e3)}));